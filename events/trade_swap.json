{
    "id": "trade_swap",
    "description": "Fired when someone exchanges tokens.",
    "category": "Trade",
    "sql_insert": [
        "INSERT INTO trade_swap_events (balance_changes, trader, transaction_id, receipt_id, block_height, block_timestamp) SELECT (elem->>'balance_changes')::jsonb, elem->>'trader', elem->>'transaction_id', elem->>'receipt_id', (elem->>'block_height')::bigint, to_timestamp((elem->>'block_timestamp_nanosec')::numeric / 1000000000) at time zone 'UTC' FROM jsonb_array_elements($1::jsonb) AS elem",
        "WITH flattened AS (SELECT kv.key as token_id, ABS(kv.value::numeric) as abs_balance, (elements->>'block_timestamp_nanosec')::numeric::bigint as timestamp_nanosec FROM jsonb_array_elements($1) as elements, jsonb_each_text(elements->'balance_changes') kv), summed AS (SELECT token_id, to_timestamp(timestamp_nanosec::double precision / 1000000000) as time, SUM(abs_balance) as volume FROM flattened GROUP BY token_id, timestamp_nanosec) INSERT INTO trading_volume_by_minute (token_id, time, volume) SELECT token_id, date_trunc('minute', time), volume FROM summed ON CONFLICT (token_id, time) DO UPDATE SET volume = trading_volume_by_minute.volume + EXCLUDED.volume;"
    ],
    "endpoints": [
        {
            "route": "by_token_newest",
            "query": "SELECT jsonb_agg(jsonb_build_object('balance_changes', balance_changes, 'trader', trader, 'transaction_id', transaction_id, 'receipt_id', receipt_id, 'block_height', block_height, 'block_timestamp_nanosec', ((extract(epoch from block_timestamp) * 1000000000)::bigint)::text)) FROM (SELECT * FROM trade_swap_events WHERE balance_changes ? ($1->>'account') ORDER BY id DESC LIMIT 50) subq"
        },
        {
            "route": "by_token_oldest",
            "query": "SELECT jsonb_agg(jsonb_build_object('balance_changes', balance_changes, 'trader', trader, 'transaction_id', transaction_id, 'receipt_id', receipt_id, 'block_height', block_height, 'block_timestamp_nanosec', ((extract(epoch from block_timestamp) * 1000000000)::bigint)::text)) FROM (SELECT * FROM trade_swap_events WHERE balance_changes ? ($1->>'account') ORDER BY id ASC LIMIT 50) subq"
        },
        {
            "route": "latest",
            "query": "SELECT jsonb_agg(jsonb_build_object('balance_changes', balance_changes, 'trader', trader, 'transaction_id', transaction_id, 'receipt_id', receipt_id, 'block_height', block_height, 'block_timestamp_nanosec', ((extract(epoch from block_timestamp) * 1000000000)::bigint)::text)) FROM (SELECT * FROM trade_swap_events ORDER BY id DESC LIMIT 50) subq"
        },
        {
            "route": "oldest",
            "query": "SELECT jsonb_agg(jsonb_build_object('balance_changes', balance_changes, 'trader', trader, 'transaction_id', transaction_id, 'receipt_id', receipt_id, 'block_height', block_height, 'block_timestamp_nanosec', ((extract(epoch from block_timestamp) * 1000000000)::bigint)::text)) FROM (SELECT * FROM trade_swap_events ORDER BY id ASC LIMIT 50) subq"
        },
        {
            "route": "by_trader_newest",
            "query": "SELECT jsonb_agg(jsonb_build_object('balance_changes', balance_changes, 'trader', trader, 'transaction_id', transaction_id, 'receipt_id', receipt_id, 'block_height', block_height, 'block_timestamp_nanosec', ((extract(epoch from block_timestamp) * 1000000000)::bigint)::text)) FROM (SELECT * FROM trade_swap_events WHERE trader = ($1->>'trader') ORDER BY id DESC LIMIT 50) subq"
        },
        {
            "route": "by_trader_oldest",
            "query": "SELECT jsonb_agg(jsonb_build_object('balance_changes', balance_changes, 'trader', trader, 'transaction_id', transaction_id, 'receipt_id', receipt_id, 'block_height', block_height, 'block_timestamp_nanosec', ((extract(epoch from block_timestamp) * 1000000000)::bigint)::text)) FROM (SELECT * FROM trade_swap_events WHERE trader = ($1->>'trader') ORDER BY id ASC LIMIT 50) subq"
        },
        {
            "route": "by_transaction",
            "query": "SELECT jsonb_build_object('balance_changes', balance_changes, 'trader', trader, 'transaction_id', transaction_id, 'receipt_id', receipt_id, 'block_height', block_height, 'block_timestamp_nanosec', ((extract(epoch from block_timestamp) * 1000000000)::bigint)::text) FROM trade_swap_events WHERE transaction_id = ($1->>'transaction_id')"
        },
        {
            "route": "volume_1h",
            "query": "SELECT to_jsonb(coalesce(sum(volume), 0)) FROM trading_volume_by_minute WHERE token_id = ($1->>'token_id') AND time >= now() - interval '1 hour'"
        },
        {
            "route": "volume_24h",
            "query": "SELECT to_jsonb(coalesce(sum(volume), 0)) FROM trading_volume_by_minute WHERE token_id = ($1->>'token_id') AND time >= now() - interval '24 hours'"
        },
        {
            "route": "volume_7d",
            "query": "SELECT to_jsonb(coalesce(sum(volume), 0)) FROM trading_volume_by_minute WHERE token_id = ($1->>'token_id') AND time >= now() - interval '7 days'"
        },
        {
            "route": "volume_usd_1h",
            "query": "WITH needed_minutes AS (SELECT DISTINCT time_bucket('1 minute', time) as minute FROM trading_volume_by_minute tv WHERE tv.token_id = ($1->>'token_id') AND tv.time >= now() - interval '1 hour'), minute_prices AS (SELECT nm.minute, (SELECT last_price / 1000000 FROM price_minutes_mv WHERE token = ($1->>'token_id') AND bucket <= nm.minute ORDER BY bucket DESC LIMIT 1) as price_usd FROM needed_minutes nm) SELECT to_jsonb(COALESCE(sum(volume * p.price_usd), 0)) FROM trading_volume_by_minute tv JOIN minute_prices p ON time_bucket('1 minute', tv.time) = p.minute WHERE tv.token_id = ($1->>'token_id') AND tv.time >= now() - interval '1 hour'"
        },
        {
            "route": "volume_usd_24h",
            "query": "WITH needed_hours AS (SELECT DISTINCT time_bucket('1 hour', time) as hour FROM trading_volume_by_minute tv WHERE tv.token_id = ($1->>'token_id') AND tv.time >= now() - interval '1 day'), hourly_prices AS (SELECT nh.hour, (SELECT last_price / 1000000 FROM price_minutes_mv WHERE token = ($1->>'token_id') AND bucket >= nh.hour AND bucket < nh.hour + interval '1 hour' ORDER BY bucket DESC LIMIT 1) as price_usd FROM needed_hours nh) SELECT to_jsonb(COALESCE(sum(volume * p.price_usd), 0)) FROM trading_volume_by_minute tv JOIN hourly_prices p ON time_bucket('1 hour', tv.time) = p.hour WHERE tv.token_id = ($1->>'token_id') AND tv.time >= now() - interval '1 day'"
        },
        {
            "route": "volume_usd_7d",
            "query": "WITH needed_hours AS (SELECT DISTINCT time_bucket('1 hour', time) as hour FROM trading_volume_by_minute tv WHERE tv.token_id = ($1->>'token_id') AND tv.time >= now() - interval '7 days'), hourly_prices AS (SELECT nh.hour, (SELECT last_price / 1000000 FROM price_minutes_mv WHERE token = ($1->>'token_id') AND bucket >= nh.hour AND bucket < nh.hour + interval '1 hour' ORDER BY bucket DESC LIMIT 1) as price_usd FROM needed_hours nh) SELECT to_jsonb(COALESCE(sum(volume * p.price_usd), 0)) FROM trading_volume_by_minute tv JOIN hourly_prices p ON time_bucket('1 hour', tv.time) = p.hour WHERE tv.token_id = ($1->>'token_id') AND tv.time >= now() - interval '7 days'"
        }
    ]
}